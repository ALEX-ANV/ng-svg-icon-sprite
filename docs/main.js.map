{"version":3,"sources":["webpack:///./dist/ng-svg-icon-sprite/fesm5/ng-svg-icon-sprite.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, Component, Input, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteService = /** @class */ (function () {\n    function IconSpriteService() {\n    }\n    IconSpriteService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] },\n    ];\n    /** @nocollapse */\n    IconSpriteService.ctorParameters = function () { return []; };\n    /** @nocollapse */ IconSpriteService.ngInjectableDef = defineInjectable({ factory: function IconSpriteService_Factory() { return new IconSpriteService(); }, token: IconSpriteService, providedIn: \"root\" });\n    return IconSpriteService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteComponent = /** @class */ (function () {\n    function IconSpriteComponent() {\n        this.width = '100%';\n        this.preserveAspectRatio = 'xMinYMax meet';\n    }\n    /**\n     * @return {?}\n     */\n    IconSpriteComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { };\n    IconSpriteComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'svg-icon-sprite',\n                    styles: [\":host svg,:host use{fill:currentColor}\"],\n                    template: \"<ng-container ngIf=\\\"!viewBox; else viewBoxTemplate\\\">\\n  <svg [attr.width]=\\\"width\\\" [attr.height]=\\\"height || width\\\" [attr.class]=\\\"classes\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-template #viewBoxTemplate>\\n  <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       [attr.viewBox]=\\\"viewBox\\\"\\n       [attr.preserveAspectRatio]=\\\"preserveAspectRatio\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-template>\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    IconSpriteComponent.ctorParameters = function () { return []; };\n    IconSpriteComponent.propDecorators = {\n        src: [{ type: Input }],\n        classes: [{ type: Input }],\n        width: [{ type: Input }],\n        height: [{ type: Input }],\n        viewBox: [{ type: Input }],\n        preserveAspectRatio: [{ type: Input }]\n    };\n    return IconSpriteComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteModule = /** @class */ (function () {\n    function IconSpriteModule() {\n    }\n    IconSpriteModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [IconSpriteComponent],\n                    exports: [IconSpriteComponent]\n                },] },\n    ];\n    return IconSpriteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { IconSpriteService, IconSpriteComponent, IconSpriteModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc3ZnLWljb24tc3ByaXRlLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9uZy1zdmctaWNvbi1zcHJpdGUvbGliL2ljb24tc3ByaXRlLnNlcnZpY2UudHMiLCJuZzovL25nLXN2Zy1pY29uLXNwcml0ZS9saWIvaWNvbi1zcHJpdGUuY29tcG9uZW50LnRzIiwibmc6Ly9uZy1zdmctaWNvbi1zcHJpdGUvbGliL2ljb24tc3ByaXRlLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEljb25TcHJpdGVTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3N2Zy1pY29uLXNwcml0ZScsXG4gIHN0eWxlczogW2A6aG9zdCBzdmcsOmhvc3QgdXNle2ZpbGw6Y3VycmVudENvbG9yfWBdLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250YWluZXIgbmdJZj1cIiF2aWV3Qm94OyBlbHNlIHZpZXdCb3hUZW1wbGF0ZVwiPlxuICA8c3ZnIFthdHRyLndpZHRoXT1cIndpZHRoXCIgW2F0dHIuaGVpZ2h0XT1cImhlaWdodCB8fCB3aWR0aFwiIFthdHRyLmNsYXNzXT1cImNsYXNzZXNcIj5cbiAgICA8dXNlIFthdHRyLnhsaW5rOmhyZWZdPVwic3JjXCI+PC91c2U+XG4gIDwvc3ZnPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSAjdmlld0JveFRlbXBsYXRlPlxuICA8c3ZnIFthdHRyLmNsYXNzXT1cImNsYXNzZXNcIlxuICAgICAgIFthdHRyLndpZHRoXT1cIndpZHRoXCJcbiAgICAgICBbYXR0ci5oZWlnaHRdPVwiaGVpZ2h0IHx8IHdpZHRoXCJcbiAgICAgICBbYXR0ci52aWV3Qm94XT1cInZpZXdCb3hcIlxuICAgICAgIFthdHRyLnByZXNlcnZlQXNwZWN0UmF0aW9dPVwicHJlc2VydmVBc3BlY3RSYXRpb1wiPlxuICAgIDx1c2UgW2F0dHIueGxpbms6aHJlZl09XCJzcmNcIj48L3VzZT5cbiAgPC9zdmc+XG48L25nLXRlbXBsYXRlPlxuYFxufSlcbmV4cG9ydCBjbGFzcyBJY29uU3ByaXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwdWJsaWMgc3JjOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBjbGFzc2VzOiAnaWNvbic7XG4gIEBJbnB1dCgpIHB1YmxpYyB3aWR0aCA9ICcxMDAlJztcbiAgQElucHV0KCkgcHVibGljIGhlaWdodDogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgdmlld0JveDogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgcHJlc2VydmVBc3BlY3RSYXRpbyA9ICd4TWluWU1heCBtZWV0JztcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge31cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uU3ByaXRlQ29tcG9uZW50IH0gZnJvbSAnLi9pY29uLXNwcml0ZS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW0ljb25TcHJpdGVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbSWNvblNwcml0ZUNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgSWNvblNwcml0ZU1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtJQU9FO0tBQWlCOztnQkFMbEIsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7NEJBSkQ7Ozs7Ozs7QUNBQTtJQStCRTtxQkFMd0IsTUFBTTttQ0FHUSxlQUFlO0tBRXBDOzs7O0lBRWpCLHNDQUFROzs7SUFBUixlQUFhOztnQkEvQmQsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLE1BQU0sRUFBRSxDQUFDLHdDQUF3QyxDQUFDO29CQUNsRCxRQUFRLEVBQUUsMmdCQWVYO2lCQUNBOzs7OztzQkFHRSxLQUFLOzBCQUNMLEtBQUs7d0JBQ0wsS0FBSzt5QkFDTCxLQUFLOzBCQUNMLEtBQUs7c0NBQ0wsS0FBSzs7OEJBN0JSOzs7Ozs7O0FDQUE7Ozs7Z0JBR0MsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxFQUNSO29CQUNELFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDO29CQUNuQyxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztpQkFDL0I7OzJCQVJEOzs7Ozs7Ozs7Ozs7Ozs7In0=","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div ::ng-deep svg.some-icon-class {\\n  height: 75px;\\n  width: 75px;\\n  fill: orange; /* IE 11 support by polyfill */\\n}\\n\\ndiv ::ng-deep svg.some-icon-class use {\\n  fill: orange; /* evergreen browser symbol styling */\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>\\n    {{ title }} <small>(package development app)</small>\\n  </h1>\\n\\n  <p>\\n    Angular package that provides both a solution for generating sprites and a component for including them.\\n  </p>\\n\\n  <ul>\\n    <li>\\n      <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite sources on Github</strong>\\n      </a>\\n    </li>\\n    <li>\\n      <a href=\\\"https://www.npmjs.com/package/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite package on npm</strong>\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <h2>Usage</h2>\\n\\n  <p>\\n    install <strong>ng-svg-icon-sprite</strong> and import the npm module via <code>import &#123; IconSpriteModule &#125; from 'ng-svg-icon-sprite';</code> and add it\\n    in any <code>@NgModule</code> imports array.\\n  </p>\\n\\n  <p>\\n    run <strong>npm run create-icon-sprite</strong> to create a sprite out of your SVG icons. Include the <code>svg-icon-sprite</code>\\n    directive like shown below.\\n  </p>\\n\\n  <h2>Basic Examples</h2>\\n\\n  <ul class=\\\"inline\\\">\\n    <li style=\\\"color: darkred;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [width]=\\\"'100px'\\\"></svg-icon-sprite>\\n      <span>red, 100px</span>\\n    </li>\\n    <li style=\\\"color: darkgreen;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#delete'\\\" [width]=\\\"'90px'\\\" [height]=\\\"'80px'\\\"></svg-icon-sprite>\\n      <span>green, 90px</span>\\n    </li>\\n    <li>\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [classes]=\\\"'some-icon-class'\\\"></svg-icon-sprite>\\n      <span>component styles by <code>::ng-deep</code><br>orange, 75px</span>\\n    </li>\\n  </ul>\\n\\n  <h2>ViewBox Example</h2>\\n  <ul class=\\\"inline\\\">\\n    <li style=\\\"color: magenta;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star-no-viewBox'\\\" [width]=\\\"'80px'\\\" [viewBox]=\\\"'0 0 24 24'\\\"></svg-icon-sprite>\\n      <span>magenta 80px,<br>viewBox <code>'0 0 24 24'</code></span>\\n    </li>\\n  </ul>\\n\\n  <h2>Variable Example</h2>\\n\\n  <button (click)=\\\"changeIconPath(iconSprite.src)\\\">Change Icon Path</button>\\n  <button (click)=\\\"changeIconSize(iconSprite.width)\\\">Size +</button>\\n  <input #colorInput type=\\\"text\\\" value=\\\"red\\\">\\n  <button (click)=\\\"changeIconColor(colorInput.value)\\\">Set color</button>\\n\\n  <ul class=\\\"inline\\\">\\n    <li [style.color]=\\\"color\\\">\\n      <svg-icon-sprite #iconSprite [viewBox]=\\\"'0 0 24 24'\\\" [src]=\\\"'assets/sprites/sprite.svg#' + icon\\\" [width]=\\\"width\\\"></svg-icon-sprite>\\n    </li>\\n  </ul>\\n\\n  <p>\\n    Report bugs or feature requests on <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite/issues\\\">Github Issues</a>\\n  </p>\\n  <p>\\n    <small>Copyright Jan Suwart, MIT license</small>\\n  </p>\\n</div>\\n\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-87799552e7e5 -->\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-part-2-6e2bc1e14121 -->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'SVG-Icon-Sprite';\n\n  public icon = 'delete';\n  public width = '64px';\n  public color = 'red';\n\n  changeIconPath(src) {\n    this.icon = src.split('#')[1] === 'delete' ? 'star' : 'delete';\n  }\n\n  changeIconSize(width) {\n    this.width = Number(width.replace('px', '')) + 10 + 'px';\n  }\n\n  changeIconColor(color) {\n    this.color = color;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { IconSpriteModule } from 'ng-svg-icon-sprite';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    IconSpriteModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}