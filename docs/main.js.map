{"version":3,"sources":["webpack:///./dist/ng-svg-icon-sprite/fesm5/ng-svg-icon-sprite.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, Directive, ElementRef, Renderer2, Input, Component, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar IconSpriteService = /** @class */ (function () {\n    function IconSpriteService() {\n    }\n    IconSpriteService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    IconSpriteService.ctorParameters = function () { return []; };\n    /** @nocollapse */ IconSpriteService.ngInjectableDef = defineInjectable({ factory: function IconSpriteService_Factory() { return new IconSpriteService(); }, token: IconSpriteService, providedIn: \"root\" });\n    return IconSpriteService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar IconSpriteComponent = /** @class */ (function () {\n    function IconSpriteComponent() {\n        this.classes = 'icon';\n        this.width = '100%';\n        this.preserveAspectRatio = 'xMinYMax meet';\n    }\n    IconSpriteComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'svg-icon-sprite',\n                    template: \"<ng-container *ngIf=\\\"!viewBox && !attribute\\\">\\n  <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!viewBox && attribute\\\">\\n  <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       IconSpriteAttr [attribute]=\\\"attribute\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"viewBox && !attribute\\\">\\n    <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       [attr.viewBox]=\\\"viewBox\\\"\\n       [attr.preserveAspectRatio]=\\\"preserveAspectRatio\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"viewBox && attribute\\\">\\n    <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       [attr.viewBox]=\\\"viewBox\\\"\\n       [attr.preserveAspectRatio]=\\\"preserveAspectRatio\\\"\\n       IconSpriteAttr [attribute]=\\\"attribute\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\",\n                    styles: [\":host svg,:host use{fill:currentColor}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    IconSpriteComponent.ctorParameters = function () { return []; };\n    IconSpriteComponent.propDecorators = {\n        src: [{ type: Input }],\n        classes: [{ type: Input }],\n        width: [{ type: Input }],\n        height: [{ type: Input }],\n        viewBox: [{ type: Input }],\n        preserveAspectRatio: [{ type: Input }],\n        attribute: [{ type: Input }]\n    };\n    return IconSpriteComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Set your own attribute key/value pairs on the generated SVG element, i.e. focusable=\"false\"\n */\nvar IconSpriteDirective = /** @class */ (function () {\n    function IconSpriteDirective(renderer, el) {\n        this.renderer = renderer;\n        this.el = el;\n    }\n    /**\n     * @return {?}\n     */\n    IconSpriteDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.attribute[0] && this.attribute[1]) {\n            this.renderer.setAttribute(this.el.nativeElement, this.attribute[0], this.attribute[1]);\n        }\n        else if (this.attribute[0]) {\n            this.renderer.setAttribute(this.el.nativeElement, this.attribute[0], '');\n        }\n    };\n    IconSpriteDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[IconSpriteAttr]'\n                },] }\n    ];\n    /** @nocollapse */\n    IconSpriteDirective.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    IconSpriteDirective.propDecorators = {\n        attribute: [{ type: Input }]\n    };\n    return IconSpriteDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar IconSpriteModule = /** @class */ (function () {\n    function IconSpriteModule() {\n    }\n    IconSpriteModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        IconSpriteComponent,\n                        IconSpriteDirective\n                    ],\n                    exports: [IconSpriteComponent]\n                },] }\n    ];\n    return IconSpriteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { IconSpriteService, IconSpriteComponent, IconSpriteModule, IconSpriteDirective as Éµa };\n\n//# sourceMappingURL=ng-svg-icon-sprite.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <h1>\\n    {{ title }} <small>(package development app)</small>\\n  </h1>\\n\\n  <p>\\n    Angular package that provides both a solution for generating sprites and a component for including them.\\n  </p>\\n\\n  <ul>\\n    <li>\\n      <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite sources on Github</strong>\\n      </a>\\n    </li>\\n    <li>\\n      <a href=\\\"https://www.npmjs.com/package/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite package on npm</strong>\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <h2>Usage</h2>\\n\\n  <p>\\n    Install <strong>ng-svg-icon-sprite</strong> and import the npm module via <code>import &#123; IconSpriteModule &#125; from 'ng-svg-icon-sprite';</code> and add it\\n    in any <code>@NgModule</code> imports array.\\n  </p>\\n\\n  <p>\\n    Run <strong>npm run create-icon-sprite</strong> to create a sprite out of your SVG icons. Include the <code>svg-icon-sprite</code>\\n    directive like shown below.\\n  </p>\\n\\n  <strong [attr.foo]=\\\"bar\\\">Run development app (root project)</strong>\\n\\n  <p>\\n    Execute <code>npm run build:lib</code> to generate the icon-sprite package. Then start the project via <code>npm run start</code>.\\n  </p>\\n\\n  <h2>Basic Examples</h2>\\n\\n  <ul class=\\\"inline\\\">\\n    <li>\\n      <div class=\\\"icon-examples-1\\\">\\n        <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [width]=\\\"'100px'\\\"></svg-icon-sprite>\\n      </div>\\n      <span>red, 100px</span>\\n    </li>\\n    <li>\\n      <div class=\\\"icon-examples-2\\\">\\n        <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#delete'\\\" [width]=\\\"'90px'\\\" [height]=\\\"'80px'\\\"></svg-icon-sprite>\\n      </div>\\n      <span>green, 90px</span>\\n    </li>\\n    <li>\\n      <div class=\\\"icon-examples-3\\\">\\n        <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [classes]=\\\"'some-icon-class'\\\"></svg-icon-sprite>\\n      </div>\\n      <span>component styles by <code>::ng-deep</code><br>orange, 75px</span>\\n    </li>\\n  </ul>\\n\\n  <h2>ViewBox Example</h2>\\n  <ul class=\\\"inline\\\">\\n    <li>\\n      <div class=\\\"icon-examples-4\\\">\\n        <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star-no-viewBox'\\\" [width]=\\\"'80px'\\\" [viewBox]=\\\"'0 0 24 24'\\\"></svg-icon-sprite>\\n      </div>\\n      <span>magenta 80px,<br>viewBox <code>'0 0 24 24'</code></span>\\n    </li>\\n  </ul>\\n\\n  <h2>Variable Example</h2>\\n\\n  <button (click)=\\\"changeIconPath(iconSprite.src)\\\">Change Icon Path</button>\\n  <button (click)=\\\"changeIconSize(iconSprite.width)\\\">Size +</button>\\n  <input #colorInput type=\\\"text\\\" value=\\\"red\\\">\\n  <button (click)=\\\"changeIconColor(colorInput.value)\\\">Set color</button>\\n\\n  <ul class=\\\"inline\\\">\\n    <li [style.color]=\\\"color\\\">\\n      <svg-icon-sprite #iconSprite [viewBox]=\\\"'0 0 24 24'\\\" [src]=\\\"'assets/sprites/sprite.svg#' + icon\\\" [width]=\\\"width\\\"></svg-icon-sprite>\\n    </li>\\n  </ul>\\n\\n  <h2>Custom SVG Attribute Example</h2>\\n\\n  <ul class=\\\"inline\\\">\\n    <li>\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [width]=\\\"'60px'\\\" [attribute]=\\\"['focusable', 'false']\\\"></svg-icon-sprite>\\n      <span>custom attribute,<br><code>\\\"focusable\\\", \\\"false\\\"</code></span>\\n    </li>\\n  </ul>\\n\\n  <p>\\n    Report bugs or feature requests on <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite/issues\\\">Github Issues</a>\\n  </p>\\n  <p>\\n    <small>Copyright Jan Suwart, MIT license</small>\\n  </p>\\n</div>\\n\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-87799552e7e5 -->\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-part-2-6e2bc1e14121 -->\\n\"","module.exports = \"@-webkit-keyframes mymove {\\n  0% {\\n    padding-left: 0; }\\n  50% {\\n    padding-left: 3px; }\\n  75% {\\n    padding-left: 0; }\\n  100% {\\n    padding-left: -3px; } }\\n\\n@keyframes mymove {\\n  0% {\\n    padding-left: 0; }\\n  50% {\\n    padding-left: 3px; }\\n  75% {\\n    padding-left: 0; }\\n  100% {\\n    padding-left: -3px; } }\\n\\n.icon-examples-1 {\\n  color: darkred;\\n  transition: -webkit-transform ease-in-out 0.2s;\\n  transition: transform ease-in-out 0.2s;\\n  transition: transform ease-in-out 0.2s, -webkit-transform ease-in-out 0.2s; }\\n\\n.icon-examples-1:hover, .icon-examples-1:focus {\\n    color: red;\\n    -webkit-transform: rotate(20deg);\\n        -ms-transform: rotate(20deg);\\n            transform: rotate(20deg); }\\n\\n.icon-examples-2 {\\n  color: darkgreen;\\n  transition: color ease-in-out 0.2s; }\\n\\n.icon-examples-2:hover, .icon-examples-2:focus {\\n    color: limegreen; }\\n\\n.icon-examples-3 {\\n  transition: -webkit-transform ease-in-out 0.2s;\\n  transition: transform ease-in-out 0.2s;\\n  transition: transform ease-in-out 0.2s, -webkit-transform ease-in-out 0.2s;\\n  -webkit-transform-origin: left center;\\n      -ms-transform-origin: left center;\\n          transform-origin: left center; }\\n\\n.icon-examples-3:hover, .icon-examples-3:focus {\\n    -webkit-transform: scale(1.2);\\n        -ms-transform: scale(1.2);\\n            transform: scale(1.2); }\\n\\n.icon-examples-4 {\\n  color: magenta; }\\n\\n.icon-examples-4:hover, .icon-examples-4:focus {\\n    color: indigo;\\n    transition: color ease-in-out 0.2s;\\n    -webkit-animation: mymove 0.2s infinite ease-in-out;\\n            animation: mymove 0.2s infinite ease-in-out; }\\n\\ndiv ::ng-deep svg.some-icon-class {\\n  height: 75px;\\n  width: 75px; }\\n\\ndiv ::ng-deep svg.some-icon-class use {\\n  fill: orange;\\n  /* evergreen browser symbol styling */ }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYW4uc3V3YXJ0L1Byb2plY3RzL25nLXN2Zy1pY29uLXNwcml0ZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO0lBQU8sZ0JBQWdCLEVBQUE7RUFDdkI7SUFBTyxrQkFBa0IsRUFBQTtFQUN6QjtJQUFPLGdCQUFlLEVBQUE7RUFDdEI7SUFBTyxtQkFBbUIsRUFBQSxFQUFBOztBQUo1QjtFQUNFO0lBQU8sZ0JBQWdCLEVBQUE7RUFDdkI7SUFBTyxrQkFBa0IsRUFBQTtFQUN6QjtJQUFPLGdCQUFlLEVBQUE7RUFDdEI7SUFBTyxtQkFBbUIsRUFBQSxFQUFBOztBQUk1QjtFQUNFLGVBQWM7RUFDZCwrQ0FBc0M7RUFBdEMsdUNBQXNDO0VBQXRDLDJFQUFzQyxFQU12Qzs7QUFSRDtJQUtJLFdBQVU7SUFDVixpQ0FBd0I7UUFBeEIsNkJBQXdCO1lBQXhCLHlCQUF3QixFQUN6Qjs7QUFHSDtFQUNFLGlCQUFnQjtFQUNoQixtQ0FBa0MsRUFLbkM7O0FBUEQ7SUFLSSxpQkFBZ0IsRUFDakI7O0FBR0g7RUFDRSwrQ0FBc0M7RUFBdEMsdUNBQXNDO0VBQXRDLDJFQUFzQztFQUN0QyxzQ0FBNkI7TUFBN0Isa0NBQTZCO1VBQTdCLDhCQUE2QixFQUs5Qjs7QUFQRDtJQUtJLDhCQUFxQjtRQUFyQiwwQkFBcUI7WUFBckIsc0JBQXFCLEVBQ3RCOztBQUdIO0VBQ0UsZUFBYyxFQU9mOztBQVJEO0lBSUksY0FBYTtJQUNiLG1DQUFrQztJQUNsQyxvREFBMkM7WUFBM0MsNENBQTJDLEVBQzVDOztBQUlIO0VBQ0UsYUFBWTtFQUNaLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGFBQVk7RUFBRSxzQ0FBc0MsRUFDckQiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAa2V5ZnJhbWVzIG15bW92ZSB7XG4gIDAlICAgeyBwYWRkaW5nLWxlZnQ6IDAgfVxuICA1MCUgIHsgcGFkZGluZy1sZWZ0OiAzcHggfVxuICA3NSUgIHsgcGFkZGluZy1sZWZ0OiAwOyB9XG4gIDEwMCUgeyBwYWRkaW5nLWxlZnQ6IC0zcHggfVxufVxuXG4vLyBVc2UgY29sb3IgcHJvcGVydHkgZm9yIG92ZXJyaWRpbmcgZGVmYXVsdCBjb2xvciBhbmQgaG92ZXIgZWZmZWN0XG4uaWNvbi1leGFtcGxlcy0xIHtcbiAgY29sb3I6IGRhcmtyZWQ7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSBlYXNlLWluLW91dCAwLjJzO1xuXG4gICY6aG92ZXIsICY6Zm9jdXMge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMjBkZWcpO1xuICB9XG59XG5cbi5pY29uLWV4YW1wbGVzLTIge1xuICBjb2xvcjogZGFya2dyZWVuO1xuICB0cmFuc2l0aW9uOiBjb2xvciBlYXNlLWluLW91dCAwLjJzO1xuXG4gICY6aG92ZXIsICY6Zm9jdXMge1xuICAgIGNvbG9yOiBsaW1lZ3JlZW47XG4gIH1cbn1cblxuLmljb24tZXhhbXBsZXMtMyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSBlYXNlLWluLW91dCAwLjJzO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcblxuICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIH1cbn1cblxuLmljb24tZXhhbXBsZXMtNCB7XG4gIGNvbG9yOiBtYWdlbnRhO1xuXG4gICY6aG92ZXIsICY6Zm9jdXMge1xuICAgIGNvbG9yOiBpbmRpZ287XG4gICAgdHJhbnNpdGlvbjogY29sb3IgZWFzZS1pbi1vdXQgMC4ycztcbiAgICBhbmltYXRpb246IG15bW92ZSAwLjJzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICB9XG59XG5cbi8vIEFjY2VzcyB0aGUgU1ZHIHZpYSA6Om5nLWRlZXAgc2VsZWN0b3JcbmRpdiA6Om5nLWRlZXAgc3ZnLnNvbWUtaWNvbi1jbGFzcyB7XG4gIGhlaWdodDogNzVweDtcbiAgd2lkdGg6IDc1cHg7XG59XG5cbmRpdiA6Om5nLWRlZXAgc3ZnLnNvbWUtaWNvbi1jbGFzcyB1c2Uge1xuICBmaWxsOiBvcmFuZ2U7IC8qIGV2ZXJncmVlbiBicm93c2VyIHN5bWJvbCBzdHlsaW5nICovXG59XG4iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title = 'SVG-Icon-Sprite';\n\n  public icon = 'delete';\n  public width = '64px';\n  public color = 'red';\n\n  changeIconPath(src) {\n    this.icon = src.split('#')[1] === 'delete' ? 'star' : 'delete';\n  }\n\n  changeIconSize(width) {\n    this.width = Number(width.replace('px', '')) + 10 + 'px';\n  }\n\n  changeIconColor(color) {\n    this.color = color;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { IconSpriteModule } from 'ng-svg-icon-sprite';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    IconSpriteModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}