{"version":3,"sources":["webpack:///./dist/ng-svg-icon-sprite/fesm5/ng-svg-icon-sprite.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAqG;AAC9E;;AAEvB;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D,mIAA6E,gDAAgD,gCAAgC,EAAE,gDAAgD;AAC/M;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD,kBAAkB;AACpE;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,eAAe,4DAAc;AAC7B,mBAAmB,4DAAc;AACjC,iBAAiB,4DAAc;AAC/B,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;AACjC,+BAA+B,4DAAc;AAC7C,qBAAqB,4DAAc;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,gEAAkB;AAC3B,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,4DAAc;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEQ;;AAER,2CAA2C,cAAc,uxL;;;;;;;;;;;AC9HzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,qDAAqD,iBAAiB,gBAAgB,iBAAiB,mCAAmC,2CAA2C,iBAAiB,0CAA0C,G;;;;;;;;;;;ACAhP,2DAA2D,SAAS,woBAAwoB,wBAAwB,2BAA2B,okBAAokB,0LAA0L,weAAwe,42BAA42B,yoB;;;;;;;;;;;;;;;;;;;;;ACAvyF;AAO1C;IALA;QAMS,UAAK,GAAG,iBAAiB,CAAC;QAE1B,SAAI,GAAG,QAAQ,CAAC;QAChB,UAAK,GAAG,MAAM,CAAC;QACf,UAAK,GAAG,KAAK,CAAC;IAavB,CAAC;IAXC,qCAAc,GAAd,UAAe,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IACjE,CAAC;IAED,qCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IAC3D,CAAC;IAED,sCAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAjBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACO;AActD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,mEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;AClBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["import { Injectable, Directive, ElementRef, Renderer2, Input, Component, NgModule, defineInjectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteService = /** @class */ (function () {\n    function IconSpriteService() {\n    }\n    IconSpriteService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] },\n    ];\n    /** @nocollapse */\n    IconSpriteService.ctorParameters = function () { return []; };\n    /** @nocollapse */ IconSpriteService.ngInjectableDef = defineInjectable({ factory: function IconSpriteService_Factory() { return new IconSpriteService(); }, token: IconSpriteService, providedIn: \"root\" });\n    return IconSpriteService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteComponent = /** @class */ (function () {\n    function IconSpriteComponent() {\n        this.classes = 'icon';\n        this.width = '100%';\n        this.preserveAspectRatio = 'xMinYMax meet';\n    }\n    IconSpriteComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'svg-icon-sprite',\n                    styles: [\":host svg,:host use{fill:currentColor}\"],\n                    template: \"<ng-container *ngIf=\\\"!viewBox && !attribute\\\">\\n  <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!viewBox && attribute\\\">\\n  <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       IconSpriteAttr [attribute]=\\\"attribute\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"viewBox && !attribute\\\">\\n    <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       [attr.viewBox]=\\\"viewBox\\\"\\n       [attr.preserveAspectRatio]=\\\"preserveAspectRatio\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"viewBox && attribute\\\">\\n    <svg [attr.class]=\\\"classes\\\"\\n       [attr.width]=\\\"width\\\"\\n       [attr.height]=\\\"height || width\\\"\\n       [attr.viewBox]=\\\"viewBox\\\"\\n       [attr.preserveAspectRatio]=\\\"preserveAspectRatio\\\"\\n       IconSpriteAttr [attribute]=\\\"attribute\\\">\\n    <use [attr.xlink:href]=\\\"src\\\"></use>\\n  </svg>\\n</ng-container>\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    IconSpriteComponent.ctorParameters = function () { return []; };\n    IconSpriteComponent.propDecorators = {\n        src: [{ type: Input }],\n        classes: [{ type: Input }],\n        width: [{ type: Input }],\n        height: [{ type: Input }],\n        viewBox: [{ type: Input }],\n        preserveAspectRatio: [{ type: Input }],\n        attribute: [{ type: Input }]\n    };\n    return IconSpriteComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Set your own attribute key/value pairs on the generated SVG element, i.e. focusable=\"false\"\n */\nvar IconSpriteDirective = /** @class */ (function () {\n    function IconSpriteDirective(renderer, el) {\n        this.renderer = renderer;\n        this.el = el;\n    }\n    /**\n     * @return {?}\n     */\n    IconSpriteDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.attribute[0] && this.attribute[1]) {\n            this.renderer.setAttribute(this.el.nativeElement, this.attribute[0], this.attribute[1]);\n        }\n        else if (this.attribute[0]) {\n            this.renderer.setAttribute(this.el.nativeElement, this.attribute[0], '');\n        }\n    };\n    IconSpriteDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[IconSpriteAttr]'\n                },] },\n    ];\n    /** @nocollapse */\n    IconSpriteDirective.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    IconSpriteDirective.propDecorators = {\n        attribute: [{ type: Input }]\n    };\n    return IconSpriteDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar IconSpriteModule = /** @class */ (function () {\n    function IconSpriteModule() {\n    }\n    IconSpriteModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        IconSpriteComponent,\n                        IconSpriteDirective\n                    ],\n                    exports: [IconSpriteComponent]\n                },] },\n    ];\n    return IconSpriteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { IconSpriteService, IconSpriteComponent, IconSpriteModule, IconSpriteDirective as Éµa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc3ZnLWljb24tc3ByaXRlLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9uZy1zdmctaWNvbi1zcHJpdGUvbGliL2ljb24tc3ByaXRlLnNlcnZpY2UudHMiLCJuZzovL25nLXN2Zy1pY29uLXNwcml0ZS9saWIvaWNvbi1zcHJpdGUuY29tcG9uZW50LnRzIiwibmc6Ly9uZy1zdmctaWNvbi1zcHJpdGUvbGliL2ljb24tc3ByaXRlLmRpcmVjdGl2ZS50cyIsIm5nOi8vbmctc3ZnLWljb24tc3ByaXRlL2xpYi9pY29uLXNwcml0ZS5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBJY29uU3ByaXRlU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cbn1cbiIsImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc3ZnLWljb24tc3ByaXRlJyxcbiAgc3R5bGVzOiBbYDpob3N0IHN2Zyw6aG9zdCB1c2V7ZmlsbDpjdXJyZW50Q29sb3J9YF0sXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF2aWV3Qm94ICYmICFhdHRyaWJ1dGVcIj5cbiAgPHN2ZyBbYXR0ci5jbGFzc109XCJjbGFzc2VzXCJcbiAgICAgICBbYXR0ci53aWR0aF09XCJ3aWR0aFwiXG4gICAgICAgW2F0dHIuaGVpZ2h0XT1cImhlaWdodCB8fCB3aWR0aFwiPlxuICAgIDx1c2UgW2F0dHIueGxpbms6aHJlZl09XCJzcmNcIj48L3VzZT5cbiAgPC9zdmc+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF2aWV3Qm94ICYmIGF0dHJpYnV0ZVwiPlxuICA8c3ZnIFthdHRyLmNsYXNzXT1cImNsYXNzZXNcIlxuICAgICAgIFthdHRyLndpZHRoXT1cIndpZHRoXCJcbiAgICAgICBbYXR0ci5oZWlnaHRdPVwiaGVpZ2h0IHx8IHdpZHRoXCJcbiAgICAgICBJY29uU3ByaXRlQXR0ciBbYXR0cmlidXRlXT1cImF0dHJpYnV0ZVwiPlxuICAgIDx1c2UgW2F0dHIueGxpbms6aHJlZl09XCJzcmNcIj48L3VzZT5cbiAgPC9zdmc+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInZpZXdCb3ggJiYgIWF0dHJpYnV0ZVwiPlxuICAgIDxzdmcgW2F0dHIuY2xhc3NdPVwiY2xhc3Nlc1wiXG4gICAgICAgW2F0dHIud2lkdGhdPVwid2lkdGhcIlxuICAgICAgIFthdHRyLmhlaWdodF09XCJoZWlnaHQgfHwgd2lkdGhcIlxuICAgICAgIFthdHRyLnZpZXdCb3hdPVwidmlld0JveFwiXG4gICAgICAgW2F0dHIucHJlc2VydmVBc3BlY3RSYXRpb109XCJwcmVzZXJ2ZUFzcGVjdFJhdGlvXCI+XG4gICAgPHVzZSBbYXR0ci54bGluazpocmVmXT1cInNyY1wiPjwvdXNlPlxuICA8L3N2Zz5cbjwvbmctY29udGFpbmVyPlxuXG48bmctY29udGFpbmVyICpuZ0lmPVwidmlld0JveCAmJiBhdHRyaWJ1dGVcIj5cbiAgICA8c3ZnIFthdHRyLmNsYXNzXT1cImNsYXNzZXNcIlxuICAgICAgIFthdHRyLndpZHRoXT1cIndpZHRoXCJcbiAgICAgICBbYXR0ci5oZWlnaHRdPVwiaGVpZ2h0IHx8IHdpZHRoXCJcbiAgICAgICBbYXR0ci52aWV3Qm94XT1cInZpZXdCb3hcIlxuICAgICAgIFthdHRyLnByZXNlcnZlQXNwZWN0UmF0aW9dPVwicHJlc2VydmVBc3BlY3RSYXRpb1wiXG4gICAgICAgSWNvblNwcml0ZUF0dHIgW2F0dHJpYnV0ZV09XCJhdHRyaWJ1dGVcIj5cbiAgICA8dXNlIFthdHRyLnhsaW5rOmhyZWZdPVwic3JjXCI+PC91c2U+XG4gIDwvc3ZnPlxuPC9uZy1jb250YWluZXI+XG5gXG59KVxuZXhwb3J0IGNsYXNzIEljb25TcHJpdGVDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIHB1YmxpYyBzcmM6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGNsYXNzZXMgPSAnaWNvbic7XG4gIEBJbnB1dCgpIHB1YmxpYyB3aWR0aCA9ICcxMDAlJztcbiAgQElucHV0KCkgcHVibGljIGhlaWdodDogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgdmlld0JveDogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgcHJlc2VydmVBc3BlY3RSYXRpbyA9ICd4TWluWU1heCBtZWV0JztcbiAgQElucHV0KCkgcHVibGljIGF0dHJpYnV0ZTogW3N0cmluZywgc3RyaW5nXTtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIiwiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBTZXQgeW91ciBvd24gYXR0cmlidXRlIGtleS92YWx1ZSBwYWlycyBvbiB0aGUgZ2VuZXJhdGVkIFNWRyBlbGVtZW50LCBpLmUuIGZvY3VzYWJsZT1cImZhbHNlXCJcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW0ljb25TcHJpdGVBdHRyXSdcbn0pXG5leHBvcnQgY2xhc3MgSWNvblNwcml0ZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgYXR0cmlidXRlOiBbc3RyaW5nLCBzdHJpbmddO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgIHB1YmxpYyBlbDogRWxlbWVudFJlZlxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gIFx0aWYgKHRoaXMuYXR0cmlidXRlWzBdICYmIHRoaXMuYXR0cmlidXRlWzFdKSB7XG4gIFx0ICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHRoaXMuYXR0cmlidXRlWzBdLCB0aGlzLmF0dHJpYnV0ZVsxXSk7XG4gIFx0fSBlbHNlIGlmICh0aGlzLmF0dHJpYnV0ZVswXSkge1xuICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLmF0dHJpYnV0ZVswXSwgJycpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7ICBcbmltcG9ydCB7IEljb25TcHJpdGVDb21wb25lbnQgfSBmcm9tICcuL2ljb24tc3ByaXRlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJY29uU3ByaXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9pY29uLXNwcml0ZS5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSWNvblNwcml0ZUNvbXBvbmVudCxcbiAgICBJY29uU3ByaXRlRGlyZWN0aXZlXG4gIF0sXG4gIGV4cG9ydHM6IFtJY29uU3ByaXRlQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBJY29uU3ByaXRlTW9kdWxlIHsgfVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtJQU9FO0tBQWlCOztnQkFMbEIsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7NEJBSkQ7Ozs7Ozs7QUNBQTtJQXNERTt1QkFQMEIsTUFBTTtxQkFDUixNQUFNO21DQUdRLGVBQWU7S0FHcEM7O2dCQXBEbEIsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLE1BQU0sRUFBRSxDQUFDLHdDQUF3QyxDQUFDO29CQUNsRCxRQUFRLEVBQUUsOHFDQXFDWDtpQkFDQTs7Ozs7c0JBR0UsS0FBSzswQkFDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsS0FBSzswQkFDTCxLQUFLO3NDQUNMLEtBQUs7NEJBQ0wsS0FBSzs7OEJBcERSOzs7Ozs7O0FDQUE7Ozs7SUFZRSw2QkFDUyxVQUNBO1FBREEsYUFBUSxHQUFSLFFBQVE7UUFDUixPQUFFLEdBQUYsRUFBRTtLQUNQOzs7O0lBRUosc0NBQVE7OztJQUFSO1FBQ0MsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDMUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDekY7YUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUMxRTtLQUNGOztnQkFsQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7aUJBQzdCOzs7O2dCQVArQixTQUFTO2dCQUFyQixVQUFVOzs7NEJBVTNCLEtBQUs7OzhCQVZSOzs7Ozs7O0FDQUE7Ozs7Z0JBS0MsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsWUFBWSxFQUFFO3dCQUNaLG1CQUFtQjt3QkFDbkIsbUJBQW1CO3FCQUNwQjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztpQkFDL0I7OzJCQVpEOzs7Ozs7Ozs7Ozs7Ozs7In0=","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div ::ng-deep svg.some-icon-class {\\n  height: 75px;\\n  width: 75px;\\n  fill: orange; /* IE 11 support by polyfill */\\n}\\n\\ndiv ::ng-deep svg.some-icon-class use {\\n  fill: orange; /* evergreen browser symbol styling */\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>\\n    {{ title }} <small>(package development app)</small>\\n  </h1>\\n\\n  <p>\\n    Angular package that provides both a solution for generating sprites and a component for including them.\\n  </p>\\n\\n  <ul>\\n    <li>\\n      <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite sources on Github</strong>\\n      </a>\\n    </li>\\n    <li>\\n      <a href=\\\"https://www.npmjs.com/package/ng-svg-icon-sprite\\\">\\n        <strong>ng-svg-icon-sprite package on npm</strong>\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <h2>Usage</h2>\\n\\n  <p>\\n    Install <strong>ng-svg-icon-sprite</strong> and import the npm module via <code>import &#123; IconSpriteModule &#125; from 'ng-svg-icon-sprite';</code> and add it\\n    in any <code>@NgModule</code> imports array.\\n  </p>\\n\\n  <p>\\n    Run <strong>npm run create-icon-sprite</strong> to create a sprite out of your SVG icons. Include the <code>svg-icon-sprite</code>\\n    directive like shown below.\\n  </p>\\n\\n  <strong [attr.foo]=\\\"bar\\\">Run development app (root project)</strong>\\n\\n  <p>\\n    Execute <code>npm run build:lib</code> to generate the icon-sprite package. Then start the project via <code>npm run start</code>.\\n  </p>\\n\\n  <h2>Basic Examples</h2>\\n\\n  <ul class=\\\"inline\\\">\\n    <li style=\\\"color: darkred;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [width]=\\\"'100px'\\\"></svg-icon-sprite>\\n      <span>red, 100px</span>\\n    </li>\\n    <li style=\\\"color: darkgreen;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#delete'\\\" [width]=\\\"'90px'\\\" [height]=\\\"'80px'\\\"></svg-icon-sprite>\\n      <span>green, 90px</span>\\n    </li>\\n    <li>\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [classes]=\\\"'some-icon-class'\\\"></svg-icon-sprite>\\n      <span>component styles by <code>::ng-deep</code><br>orange, 75px</span>\\n    </li>\\n  </ul>\\n\\n  <h2>ViewBox Example</h2>\\n  <ul class=\\\"inline\\\">\\n    <li style=\\\"color: magenta;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star-no-viewBox'\\\" [width]=\\\"'80px'\\\" [viewBox]=\\\"'0 0 24 24'\\\"></svg-icon-sprite>\\n      <span>magenta 80px,<br>viewBox <code>'0 0 24 24'</code></span>\\n    </li>\\n  </ul>\\n\\n  <h2>Variable Example</h2>\\n\\n  <button (click)=\\\"changeIconPath(iconSprite.src)\\\">Change Icon Path</button>\\n  <button (click)=\\\"changeIconSize(iconSprite.width)\\\">Size +</button>\\n  <input #colorInput type=\\\"text\\\" value=\\\"red\\\">\\n  <button (click)=\\\"changeIconColor(colorInput.value)\\\">Set color</button>\\n\\n  <ul class=\\\"inline\\\">\\n    <li [style.color]=\\\"color\\\">\\n      <svg-icon-sprite #iconSprite [viewBox]=\\\"'0 0 24 24'\\\" [src]=\\\"'assets/sprites/sprite.svg#' + icon\\\" [width]=\\\"width\\\"></svg-icon-sprite>\\n    </li>\\n  </ul>\\n\\n  <h2>Custom SVG Attribute Example</h2>\\n\\n  <ul class=\\\"inline\\\">\\n    <li style=\\\"color: darkred;\\\">\\n      <svg-icon-sprite [src]=\\\"'assets/sprites/sprite.svg#star'\\\" [width]=\\\"'60px'\\\" [attribute]=\\\"['focusable', 'false']\\\"></svg-icon-sprite>\\n      <span>custom attribute,<br><code>\\\"focusable\\\", \\\"false\\\"</code></span>\\n    </li>\\n  </ul>\\n\\n  <p>\\n    Report bugs or feature requests on <a href=\\\"https://github.com/jannicz/ng-svg-icon-sprite/issues\\\">Github Issues</a>\\n  </p>\\n  <p>\\n    <small>Copyright Jan Suwart, MIT license</small>\\n  </p>\\n</div>\\n\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-87799552e7e5 -->\\n<!-- https://blog.angularindepth.com/creating-a-library-in-angular-6-part-2-6e2bc1e14121 -->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'SVG-Icon-Sprite';\n\n  public icon = 'delete';\n  public width = '64px';\n  public color = 'red';\n\n  changeIconPath(src) {\n    this.icon = src.split('#')[1] === 'delete' ? 'star' : 'delete';\n  }\n\n  changeIconSize(width) {\n    this.width = Number(width.replace('px', '')) + 10 + 'px';\n  }\n\n  changeIconColor(color) {\n    this.color = color;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { IconSpriteModule } from 'ng-svg-icon-sprite';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    IconSpriteModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}